Linux implements task sheduling through a utility called Cron.

Cron is a time-based service that runs apps, scripts and other commands repeatedly on a specified schedule.

An app or script that has been configured to be run repeatedly with Cron is known as a Cron job. Cron can be used to automate or repeate a varierty of functions on a system. From daily backups to system upgrades and patches.

The crontab file is a configuration file that is used by the Cron utility to store and track Cron jobs that have been created.

Cron jobs can also be run as any user on the system. This is a very important factor to keep an ete on as we will be targeting cron jobs that have been configured to be run as the "root" user.

This is because any script or command that is run by a Cron job will run as the root user and will consequently provide us with root access.

In order to elevate our privileges, we will need to find and identify cron jobs scheduled by the root user or the files being processed by the cron job.

-----------------------------Exploitation--------------------------------------

crontab -l (will find cronjobs specified for the particular user you're logged into as)

ls -al (lists out permissions)

grep -rnw /usr -e "/home/student/message" (will find shell scripts that contain this directory specifically)

ls -al /usr/local/share.copy.sh (example of -al showing permissions of a file)

**you can now edit this file which runs as a cron job every minute, edit it to add the user to sudoers group**

