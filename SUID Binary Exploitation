In addition to the tree main files access permissions (read, write and execute) Linux also provides users with specialized permissions that can be utilized in specific situations. One of these access permissions is the SUID (Set Owner User ID) permission.

When applied, this permission provides users with the ability to execute a script or binary with the permissions of the file owner as opposed to the user that is running the script or binary.

SUID permissions are typically used to provide unprivileged users with the ability to run specific scripts or binaries with "root" permissions. However, the elevation of privileges is limited to the execution of the script and does not translate to elevation of privileges, however if improperly configured, unprivileged users can exploit misconfigs and vuln. within the binary or script to obtain an elevated session.

This is the functionality that we will be attempting to exploit in order to elevate our privileges, however, the success of our attack with depend on the following factors:
  Owner of the SUID binary - Given that we are attempting to elevate our privileges, we will only be exploiting SUID binaries that are owned by the "root" user or other privileged users.
  Access permissions - We will require executable permissions in order to execute the SUID binary
  
-----------------------------Exploitation--------------------------------------

whoami
groups
ls -al (look for -rwsr-xr-x, notice the S is SUID and if this is owned by root but you are only a unprivileged user, you will still be able to execute this because of the S)

strings <file with the S>
**imagine that a file with S which is owned by root, and is something you execute has a line that calls upon a certain file which is executed as root. If you remove that file which is being called upon and replace it with a copy of /bin/bash then when you execute that SUID file it will then load the /bin/bash as root and give you full access)

cp bin/bash <same name as the file the SUID calls>
rm <file that is being called upon> (remove the file that the SUID file is calling upon and use the same name for your bin/bash copy, this will trick the SUID file into calling upon the new file with the same name, just a different command inside)
./ (execute) the SUID file now to get full access
